rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
      
      // Solved problems subcollection
      match /solvedProblems/{problemId} {
        allow read: if isAuthenticated();
        allow create: if isOwner(userId);
        allow update: if isOwner(userId);
        allow delete: if isOwner(userId);
      }
    }

    // Daily stats collection
    match /dailyStats/{docId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Allow collection group queries for solved problems
    match /{path=**}/solvedProblems/{problemId} {
      allow read: if isAuthenticated();
    }
  }
} 